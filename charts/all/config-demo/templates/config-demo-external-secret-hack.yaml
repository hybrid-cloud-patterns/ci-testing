{{ if .Values.clusterGroup.isHubCluster }}
---
apiVersion: "external-secrets.io/v1alpha1"
kind: ExternalSecret
metadata:
  name: config-demo-secret-hack
  namespace: config-demo
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: {{ .Values.secretStore.name }}
    kind: {{ .Values.secretStore.kind }}
  target:
    name: config-demo-secret-hack
    template:
      apiVersion: policy.open-cluster-management.io/v1
      kind: Policy
      metadata:
        name: configdemo-region-secret-policy-hack
      spec:
        remediationAction: enforce
        disabled: false
        policy-templates:
          - objectDefinition:
              apiVersion: policy.open-cluster-management.io/v1
              kind: ConfigurationPolicy
              metadata:
                name: config-demo-secret-hack
                annotations:
                  apps.open-cluster-management.io/deployables: "secret"
                  policy.open-cluster-management.io/trigger-update: 2
              spec:
                remediationAction: enforce
                severity: med
                namespaceSelector:
                  exclude:
                    - kube-*
                  include:
                    - default
                object-templates:
                  - complianceType: musthave
                    objectDefinition:
                      kind: Secret
                      type: Opaque
                      metadata:
                        name: config-demo-secret
                        namespace: config-demo
                      apiVersion: v1
                      data:
                        secret: '{{ `{{hub (lookup "v1" "Secret" "config-demo" "config-demo-secret").data.secret hub}}` }}'

  dataFrom:
    - key: {{ .Values.configdemosecret.key }}
{{ end }}
